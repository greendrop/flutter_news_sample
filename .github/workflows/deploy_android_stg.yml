---
name: Deploy Android (Stg)

env:
  JAVA_DISTRIBUTION: microsoft
  JAVA_VERSION: 17
  DART_DEFINE_FILE_PATH: dart_define/stg.json

on:
  workflow_dispatch:
  issue_comment:
    types: [created, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_trigger:
    name: Check Trigger
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      issues: write
      pull-requests: write
    if: ${{ github.event.issue.pull_request || github.event_name == 'workflow_dispatch' }}

    outputs:
      outcome: ${{ steps.set_output.outputs.outcome }}
      target_branch_name: ${{ steps.set_output.outputs.target_branch_name }}

    steps:
      - name: Check Command (Pull Request)
        id: check_command_if_pull_request
        if: ${{ github.event.issue.pull_request }}
        continue-on-error: true
        uses: xt0rted/slash-command-action@bf51f8f5f4ea3d58abc7eca58f77104182b23e88 # v2.0.0
        with:
          command: deploy_android_stg

      - name: Get branch name (Pull Request)
        id: get_branch_name_if_workflow_dispatch
        if: ${{ github.event.issue.pull_request && steps.check_command_if_pull_request.outcome == 'success' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pull_request.data.head.ref
          result-encoding: string

      - name: Check Command (Workflow Dispatch)
        id: check_command_if_workflow_dispatch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        continue-on-error: true
        run: |
          echo "outcome=success" >> "$GITHUB_OUTPUT"

      - name: Get branch name (Workflow Dispatch)
        id: get_branch_name_if_pull_request
        if: ${{ github.event_name == 'workflow_dispatch' && steps.check_command_if_workflow_dispatch.outcome == 'success' }}
        run: |
          echo "outputs.result=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"

      - name: Set output
        id: set_output
        run: |
          if [[ "${{ steps.check_command_if_pull_request.outcome }}" == "success" ]]; then
            echo "outcome=${{ steps.check_command_if_pull_request.outcome }}" >> "$GITHUB_OUTPUT"
            echo "target_branch_name=${{ steps.get_branch_name_if_workflow_dispatch.outputs.result }}" >> "$GITHUB_OUTPUT"
          elif [[ "${{ steps.check_command_if_workflow_dispatch.outcome }}" == "success" ]]; then
            echo "outcome=${{ steps.check_command_if_workflow_dispatch.outcome }}" >> "$GITHUB_OUTPUT"
            echo "target_branch_name=${{ steps.get_branch_name_if_workflow_dispatch.outputs.result }}" >> "$GITHUB_OUTPUT"
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    needs:
      - check_trigger
    if: ${{ needs.check_trigger.outputs.outcome == 'success' }}

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          ref: ${{ needs.check_trigger.outputs.target_branch_name }}

      - name: Setup Java
        uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Get Flutter version from .fvmrc
        id: get_flutter_version
        run: |
          flutter_version="$(< .fvmrc jq -r .flutter)"
          echo "version=$flutter_version" >> "$GITHUB_OUTPUT"

      - name: Setup flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{ steps.get_flutter_version.outputs.version }}
          cache: true

      - name: Run flutter pub get
        run: |
          flutter pub get

      - name: Create dart define file
        env:
          DART_DEFINE_FILE_JSON: ${{ secrets.DART_DEFINE_FILE_STG_JSON }}
        run: |
          echo "$DART_DEFINE_FILE_JSON" | base64 --decode > "$DART_DEFINE_FILE_PATH"

      - name: Create google-services.json
        env:
          FIREBASE_GOOGLE_SERVICE_JSON: ${{ secrets.FIREBASE_STG_GOOGLE_SERVICE_JSON }}
        run: |
          mkdir -p android/app/src/stg
          echo "$FIREBASE_GOOGLE_SERVICE_JSON" | base64 --decode > android/app/src/stg/google-services.json

      - name: Create upload-keystore.jks
        env:
          ANDROID_KEYSTORE_JKS: ${{ secrets.ANDROID_KEYSTORE_JKS }}
        run: |
          echo "$ANDROID_KEYSTORE_JKS" | base64 --decode > android/app/upload-keystore.jks

      - name: Create key.properties
        env:
          ANDROID_KEY_PROPERTIES: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        run: |
          echo "$ANDROID_KEY_PROPERTIES" | base64 --decode > android/app/key.properties

      - name: Run flutter build
        run: |
          flutter build apk --release --dart-define-from-file="$DART_DEFINE_FILE_PATH"

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: app-stg-release
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy:
    name: Deploy
    needs:
      - check_trigger
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          ref: ${{ needs.check_trigger.outputs.target_branch_name }}

      - name: Download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: app-stg-release
          path: build/app/outputs/flutter-apk

      - name: Setup Ruby
        uses: ruby/setup-ruby@7bae1d00b5db9166f4f0fc47985a3a5702cb58f0 # v1.197.0
        with:
          working-directory: ./android

      - name: Cache Ruby bundle
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: android/vendor/bundle
          key: android-ruby-bundle-${{ hashFiles('android/.ruby-version') }}-${{ hashFiles('**/android/Gemfile.lock') }}

      - name: Run bundle install
        working-directory: ./android
        run: |
          bundle config path vendor/bundle
          bundle install --clean

      - name: Run fastlane deploy_stg
        env:
          DEPLOY_ANDROID_STG_FIREBASE_CLI_TOKEN: ${{ secrets.DEPLOY_ANDROID_STG_FIREBASE_CLI_TOKEN }}
          DEPLOY_ANDROID_STG_APP: ${{ vars.DEPLOY_ANDROID_STG_APP }}
          DEPLOY_ANDROID_STG_TESTER_GROUPS: ${{ vars.DEPLOY_ANDROID_STG_TESTER_GROUPS }}
          DEPLOY_ANDROID_STG_RELEASE_NOTES:
        working-directory: ./android
        run: |
          bundle exec fastlane android deploy_stg

      - name: Post deploied comment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: ${{ github.event.issue.pull_request }}
        env:
          MESSAGE: |
            Deploied Android (Stg) to Firebase App Distribution
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.MESSAGE
            })
