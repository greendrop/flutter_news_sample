name: Test

env:
  FLUTTER_VERSION: 3.24.1

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: flutter pub get
        run: |
          flutter pub get

      - name: Check diff for pubspec.yaml and pubspec.lock
        run: |
          git add .
          git diff --cached --exit-code

      - name: dart run build_runner build
        run: |
          dart run build_runner build -d

      - name: Check diff for generated files
        run: |
          git add .
          git diff --cached --exit-code

      - name: dart format
        run: |
          dart format -o none --set-exit-if-changed $(find ./lib ./test -name "*.dart" -not \( -name "*.freezed.dart" -o -name "*.g.dart" -o -name "*.gen.dart" -o -name "*.gr.dart" -o -name "*.graphql.dart" -o -name "*.mock.dart" \) )

      - name: flutter analyze
        run: |
          flutter analyze

      - name: flutter test
        run: |
          flutter test --coverage

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Generate code coverage html
        run: |
          genhtml coverage/lcov.info --output-directory coverage/html

      - name: Report code coverage to console
        run: |
          lcov --list coverage/lcov.info --list-full-path --rc lcov_branch_coverage=1

      - name: Upload coverage/lcov.info to artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  build_github_pages:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage from artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy_github_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_github_pages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
